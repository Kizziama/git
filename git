#!/usr/bin/env bash
#
# Copyright Â© 2023-2024 Kizziama <kizziama@proton.me>
#
# SPDX-License-Identifier: Apache-2.0
#

Y='\033[1;33m'
W='\033[1;37m'

show_help() {
	echo -e "$W Usage: $0 [options]"
	echo -e "$W Options:"
	echo -e "$W  -A, --alias       Configure Git Alias"
	echo -e "$W  -C, --creds       Configure Git credentials"
	echo -e "$W  -G, --gpg         Configure GPG for signing commits"
	echo -e "$W  -I, --change-id   Configure Change-id Hooks"
	echo -e "$W  -S, --sync        Configure Git Identity"
	echo -e "$W  -H, --help        Display this help message"
}

sync() {
	local default_user="Kizziama"
	local default_email="kizziama@proton.me"

	read -r -p "[!] Enter your Git user (default: $default_user): " user_input
	read -r -p "[!] Enter your Git email (default: $default_email): " email_input

	GIT_USER="${user_input:-$default_user}"
	GIT_EMAIL="${email_input:-$default_email}"

	if git config --global user.name "$GIT_USER" && git config --global user.email "$GIT_EMAIL"; then
		echo -e "$W Git user set to: $GIT_USER"
		echo -e "$W Git email set to: $GIT_EMAIL"
		echo -e "$W Git configuration synced successfully."
	else
		echo -e "${Y}Error: Failed to sync Git configuration.${W}"
		exit 1
	fi
}

change_id() {
	mkdir -p "$HOME/.git/hooks"
	git config --global core.hooksPath "$HOME/.git/hooks"
	curl -Lo "$HOME/.git/hooks/commit-msg" https://raw.githubusercontent.com/Kizziama/git/main/commit-msg || {
		echo -e "${Y}Error: Failed to download commit-msg hook.${W}"
		exit 1
	}
	chmod a+x "$HOME/.git/hooks/commit-msg"
}

git_alias() {
	declare -A alias_list=(
		[c]="commit -s"
		[cam]="commit --am"
		[cm]="commit"
		[csm]="commit -s -m"
		[ca]="cherry-pick --abort"
		[cr]="cherry-pick --signoff"
		[p]="push -f"
		[cc]="cherry-pick --continue"
		[cs]="cherry-pick --skip"
		[cp]="cherry-pick"
		[r]="revert"
		[rc]="revert --continue"
		[ro]="remote rm origin"
		[ra]="remote add origin"
		[s]="switch -c"
		[b]="branch"
		[rh]="reset --hard"
		[ch]="checkout"
		[f]="fetch"
		[m]="merge"
	)

	for key in "${!alias_list[@]}"; do
		if ! git config --global alias."$key" >/dev/null; then
			git config --global alias."$key" "${alias_list[$key]}"
		else
			echo -e "$W Alias '$key' already exists, skipping."
		fi
	done
}

git_credentials() {
	sync
	read -r -s -p "[!] Enter your Git token: " git_token
	echo
	[ -z "$git_token" ] && { echo -e "${Y}Error: Git token cannot be empty.${W}"; exit 1; }

	echo "https://$GIT_USER:$git_token@github.com" >"$HOME/.git-credentials"
	git config --global credential.helper "store --file $HOME/.git-credentials"
	chmod 600 "$HOME/.git-credentials"
}

gpg_keys() {
	mkdir -p "$HOME/gpg"
	if [ ! -f "$HOME/gpg/private.key" ]; then
		wget -q https://raw.githubusercontent.com/Kizziama/git/main/gpg/private.key -O "$HOME/gpg/private.key" || {
			echo -e "${Y}Error: Failed to download GPG private key.${W}"
			exit 1
		}
	fi
	gpg --import "$HOME/gpg/private.key" || {
		echo -e "${Y}Error: Failed to import GPG private key.${W}"
		exit 1
	}

	GPG_KEY_ID=$(gpg --list-secret-keys --keyid-format=long | grep 'sec' | awk '{print $2}' | cut -d'/' -f2)
	git config --global user.signingkey "$GPG_KEY_ID"
	git config --global commit.gpgsign true

	if ! grep -q 'export GPG_TTY' "$HOME/.bashrc"; then
		echo 'export GPG_TTY=$(tty)' >>"$HOME/.bashrc"
	fi
	rm -rf "$HOME/gpg"
	source "$HOME/.bashrc"
}

options() {
	while [[ $# -gt 0 ]]; do
		case $1 in
		-A | --alias)
			git_alias
			shift
			;;
		-C | --creds)
			git_credentials
			shift
			;;
		-G | --gpg)
			gpg_keys
			shift
			;;
		-I | --change-id)
			change_id
			shift
			;;
		-S | --sync)
			sync
			shift
			;;
		-K | --ssh)
			setup_ssh
			shift
			;;
		-H | --help)
			show_help
			exit 0
			;;
		*)
			echo -e "${Y}Unknown option: $1${W}"
			show_help
			exit 1
			;;
		esac
	done
}

options "$@"
